Name:                digestive-functors-snap-auth-example
Version:             0.1
Synopsis:            Simple snap application using basic authentication
                     functionality
Description:         Project Description Here
License:             AllRightsReserved
Author:              Johannes Erber
Maintainer:          Hannes_E@gmx.de
Stability:           Experimental
Category:            Web
Build-type:          Simple
Cabal-version:       >=1.2

Flag development
  Description: Whether to build the server in development (interpreted) mode
  Default: False

Executable digestive-functors-snap-auth-example
  hs-source-dirs: src
  main-is: Main.hs

  Build-depends:
    base >= 4 && < 5,
    bytestring >= 0.9.1 && < 0.10,
    data-lens >= 2.0.1 && < 2.11,
    data-lens-template >= 2.1 && < 2.2,
    digestive-functors >= 0.4.0.0,
    digestive-functors-snap >= 0.4.0.0,
    digestive-functors-heist >= 0.4.0.0,
    email-validate >= 0.2.8,
    heist >= 0.8 && < 0.9,
    MonadCatchIO-transformers >= 0.2.1 && < 0.4,
    mtl >= 2 && < 3,
    random >= 1.0.1.1,
    snap == 0.8.*,
    snap-core   == 0.8.*,
    snap-server == 0.8.*,
    text >= 0.11 && < 0.12,
    time >= 1.1 && < 1.5,
    xml  >= 1.3.1,
    xmlhtml == 0.1.*

  if flag(development)
    cpp-options: -DDEVELOPMENT
    -- In development mode, speed is already going to suffer, so skip
    -- the fancy optimization flags.  Additionally, disable all
    -- warnings.  The hint library doesn't give an option to execute
    -- compiled code when there were also warnings, so disabling
    -- warnings allows quicker workflow.
    ghc-options: -threaded -w
  else
    if impl(ghc >= 6.12.0)
      ghc-options: -threaded -Wall -fwarn-tabs -funbox-strict-fields -O2
                   -fno-warn-orphans -fno-warn-unused-do-bind
    else
      ghc-options: -threaded -Wall -fwarn-tabs -funbox-strict-fields -O2
                   -fno-warn-orphans

